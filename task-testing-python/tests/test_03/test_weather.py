import json
from unittest.mock import patch

from weather_03.weather_wrapper import *
from unittest import mock
import unittest

response_forecast = {'cod': '200', 'message': 0, 'cnt': 40, 'list': [{'dt': 1678384800, 'main': {'temp': 0.18, 'feels_like': -4.14, 'temp_min': -0.28, 'temp_max': 0.18, 'pressure': 1027, 'sea_level': 1027, 'grnd_level': 1017, 'humidity': 60, 'temp_kf': 0.46}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'clouds': {'all': 75}, 'wind': {'speed': 4.12, 'deg': 340, 'gust': 6.64}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-09 18:00:00'}, {'dt': 1678395600, 'main': {'temp': 0.24, 'feels_like': -4.04, 'temp_min': 0.24, 'temp_max': 0.35, 'pressure': 1027, 'sea_level': 1027, 'grnd_level': 1016, 'humidity': 69, 'temp_kf': -0.11}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'clouds': {'all': 81}, 'wind': {'speed': 4.08, 'deg': 346, 'gust': 6.77}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-09 21:00:00'}, {'dt': 1678406400, 'main': {'temp': -0.47, 'feels_like': -3.85, 'temp_min': -0.79, 'temp_max': -0.47, 'pressure': 1027, 'sea_level': 1027, 'grnd_level': 1018, 'humidity': 80, 'temp_kf': 0.32}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 89}, 'wind': {'speed': 2.77, 'deg': 315, 'gust': 6.23}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-10 00:00:00'}, {'dt': 1678417200, 'main': {'temp': -1.8, 'feels_like': -5.99, 'temp_min': -1.8, 'temp_max': -1.8, 'pressure': 1026, 'sea_level': 1026, 'grnd_level': 1016, 'humidity': 91, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 99}, 'wind': {'speed': 3.36, 'deg': 359, 'gust': 8.6}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-10 03:00:00'}, {'dt': 1678428000, 'main': {'temp': -8.54, 'feels_like': -13.31, 'temp_min': -8.54, 'temp_max': -8.54, 'pressure': 1025, 'sea_level': 1025, 'grnd_level': 1015, 'humidity': 96, 'temp_kf': 0}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04n'}], 'clouds': {'all': 71}, 'wind': {'speed': 2.63, 'deg': 321, 'gust': 3.22}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-10 06:00:00'}, {'dt': 1678438800, 'main': {'temp': -9.7, 'feels_like': -14.84, 'temp_min': -9.7, 'temp_max': -9.7, 'pressure': 1024, 'sea_level': 1024, 'grnd_level': 1014, 'humidity': 96, 'temp_kf': 0}, 'weather': [{'id': 802, 'main': 'Clouds', 'description': 'scattered clouds', 'icon': '03n'}], 'clouds': {'all': 26}, 'wind': {'speed': 2.75, 'deg': 311, 'gust': 5.16}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-10 09:00:00'}, {'dt': 1678449600, 'main': {'temp': -10.74, 'feels_like': -16.09, 'temp_min': -10.74, 'temp_max': -10.74, 'pressure': 1022, 'sea_level': 1022, 'grnd_level': 1012, 'humidity': 95, 'temp_kf': 0}, 'weather': [{'id': 802, 'main': 'Clouds', 'description': 'scattered clouds', 'icon': '03d'}], 'clouds': {'all': 31}, 'wind': {'speed': 2.75, 'deg': 352, 'gust': 7.87}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-10 12:00:00'}, {'dt': 1678460400, 'main': {'temp': -3.71, 'feels_like': -9.02, 'temp_min': -3.71, 'temp_max': -3.71, 'pressure': 1020, 'sea_level': 1020, 'grnd_level': 1010, 'humidity': 85, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.23, 'deg': 27, 'gust': 7.37}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-10 15:00:00'}, {'dt': 1678471200, 'main': {'temp': -1.19, 'feels_like': -5.52, 'temp_min': -1.19, 'temp_max': -1.19, 'pressure': 1016, 'sea_level': 1016, 'grnd_level': 1007, 'humidity': 86, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.7, 'deg': 62, 'gust': 4.99}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-10 18:00:00'}, {'dt': 1678482000, 'main': {'temp': -0.53, 'feels_like': -4.02, 'temp_min': -0.53, 'temp_max': -0.53, 'pressure': 1014, 'sea_level': 1014, 'grnd_level': 1005, 'humidity': 87, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 100}, 'wind': {'speed': 2.87, 'deg': 65, 'gust': 5.3}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-10 21:00:00'}, {'dt': 1678492800, 'main': {'temp': -4.02, 'feels_like': -6.28, 'temp_min': -4.02, 'temp_max': -4.02, 'pressure': 1014, 'sea_level': 1014, 'grnd_level': 1005, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 100}, 'wind': {'speed': 1.47, 'deg': 58, 'gust': 2.68}, 'visibility': 7894, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-11 00:00:00'}, {'dt': 1678503600, 'main': {'temp': -4.32, 'feels_like': -7.25, 'temp_min': -4.32, 'temp_max': -4.32, 'pressure': 1014, 'sea_level': 1014, 'grnd_level': 1004, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 1.84, 'deg': 28, 'gust': 3.91}, 'visibility': 1252, 'pop': 0.34, 'snow': {'3h': 0.24}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-11 03:00:00'}, {'dt': 1678514400, 'main': {'temp': -2.66, 'feels_like': -7.19, 'temp_min': -2.66, 'temp_max': -2.66, 'pressure': 1013, 'sea_level': 1013, 'grnd_level': 1003, 'humidity': 89, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.55, 'deg': 28, 'gust': 9.17}, 'visibility': 10000, 'pop': 0.27, 'snow': {'3h': 0.1}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-11 06:00:00'}, {'dt': 1678525200, 'main': {'temp': -4.55, 'feels_like': -9.78, 'temp_min': -4.55, 'temp_max': -4.55, 'pressure': 1014, 'sea_level': 1014, 'grnd_level': 1004, 'humidity': 90, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.88, 'deg': 10, 'gust': 9.09}, 'visibility': 10000, 'pop': 0.08, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-11 09:00:00'}, {'dt': 1678536000, 'main': {'temp': -5.52, 'feels_like': -11.02, 'temp_min': -5.52, 'temp_max': -5.52, 'pressure': 1015, 'sea_level': 1015, 'grnd_level': 1005, 'humidity': 90, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.95, 'deg': 359, 'gust': 9.78}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-11 12:00:00'}, {'dt': 1678546800, 'main': {'temp': -1.77, 'feels_like': -6.53, 'temp_min': -1.77, 'temp_max': -1.77, 'pressure': 1016, 'sea_level': 1016, 'grnd_level': 1007, 'humidity': 87, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.1, 'deg': 8, 'gust': 6.32}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-11 15:00:00'}, {'dt': 1678557600, 'main': {'temp': 0.27, 'feels_like': -2.9, 'temp_min': 0.27, 'temp_max': 0.27, 'pressure': 1016, 'sea_level': 1016, 'grnd_level': 1007, 'humidity': 98, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 95}, 'wind': {'speed': 2.7, 'deg': 22, 'gust': 4.66}, 'visibility': 2169, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-11 18:00:00'}, {'dt': 1678568400, 'main': {'temp': 0.43, 'feels_like': -3.38, 'temp_min': 0.43, 'temp_max': 0.43, 'pressure': 1017, 'sea_level': 1017, 'grnd_level': 1008, 'humidity': 92, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13d'}], 'clouds': {'all': 98}, 'wind': {'speed': 3.48, 'deg': 341, 'gust': 5.9}, 'visibility': 10000, 'pop': 0.2, 'snow': {'3h': 0.13}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-11 21:00:00'}, {'dt': 1678579200, 'main': {'temp': -1.07, 'feels_like': -4.76, 'temp_min': -1.07, 'temp_max': -1.07, 'pressure': 1019, 'sea_level': 1019, 'grnd_level': 1009, 'humidity': 90, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 99}, 'wind': {'speed': 2.97, 'deg': 326, 'gust': 6.03}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-12 00:00:00'}, {'dt': 1678590000, 'main': {'temp': -1.56, 'feels_like': -4.27, 'temp_min': -1.56, 'temp_max': -1.56, 'pressure': 1019, 'sea_level': 1019, 'grnd_level': 1010, 'humidity': 93, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 100}, 'wind': {'speed': 2, 'deg': 343, 'gust': 4.62}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-12 03:00:00'}, {'dt': 1678600800, 'main': {'temp': -2.77, 'feels_like': -2.77, 'temp_min': -2.77, 'temp_max': -2.77, 'pressure': 1018, 'sea_level': 1018, 'grnd_level': 1008, 'humidity': 96, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 100}, 'wind': {'speed': 1.04, 'deg': 9, 'gust': 1.29}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-12 06:00:00'}, {'dt': 1678611600, 'main': {'temp': -5.61, 'feels_like': -9.09, 'temp_min': -5.61, 'temp_max': -5.61, 'pressure': 1020, 'sea_level': 1020, 'grnd_level': 1011, 'humidity': 96, 'temp_kf': 0}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04n'}], 'clouds': {'all': 76}, 'wind': {'speed': 2.07, 'deg': 305, 'gust': 3.19}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-12 09:00:00'}, {'dt': 1678622400, 'main': {'temp': -6.36, 'feels_like': -6.36, 'temp_min': -6.36, 'temp_max': -6.36, 'pressure': 1019, 'sea_level': 1019, 'grnd_level': 1009, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04d'}], 'clouds': {'all': 86}, 'wind': {'speed': 0.93, 'deg': 21, 'gust': 1.08}, 'visibility': 10000, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-12 12:00:00'}, {'dt': 1678633200, 'main': {'temp': -1.84, 'feels_like': -5.16, 'temp_min': -1.84, 'temp_max': -1.84, 'pressure': 1018, 'sea_level': 1018, 'grnd_level': 1009, 'humidity': 99, 'temp_kf': 0}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'clouds': {'all': 62}, 'wind': {'speed': 2.46, 'deg': 119, 'gust': 3.64}, 'visibility': 6432, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-12 15:00:00'}, {'dt': 1678644000, 'main': {'temp': -0.77, 'feels_like': -3.04, 'temp_min': -0.77, 'temp_max': -0.77, 'pressure': 1017, 'sea_level': 1017, 'grnd_level': 1007, 'humidity': 95, 'temp_kf': 0}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'clouds': {'all': 81}, 'wind': {'speed': 1.77, 'deg': 94, 'gust': 3.02}, 'visibility': 4036, 'pop': 0, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-12 18:00:00'}, {'dt': 1678654800, 'main': {'temp': -0.21, 'feels_like': -3.68, 'temp_min': -0.21, 'temp_max': -0.21, 'pressure': 1015, 'sea_level': 1015, 'grnd_level': 1006, 'humidity': 93, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 2.92, 'deg': 92, 'gust': 4.94}, 'visibility': 10000, 'pop': 0.2, 'snow': {'3h': 0.1}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-12 21:00:00'}, {'dt': 1678665600, 'main': {'temp': -1.87, 'feels_like': -5.84, 'temp_min': -1.87, 'temp_max': -1.87, 'pressure': 1015, 'sea_level': 1015, 'grnd_level': 1005, 'humidity': 96, 'temp_kf': 0}, 'weather': [{'id': 804, 'main': 'Clouds', 'description': 'overcast clouds', 'icon': '04n'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.1, 'deg': 91, 'gust': 7.57}, 'visibility': 9381, 'pop': 0, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-13 00:00:00'}, {'dt': 1678676400, 'main': {'temp': -2.16, 'feels_like': -7.08, 'temp_min': -2.16, 'temp_max': -2.16, 'pressure': 1013, 'sea_level': 1013, 'grnd_level': 1003, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.2, 'deg': 87, 'gust': 9.39}, 'visibility': 2777, 'pop': 0.85, 'snow': {'3h': 0.78}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-13 03:00:00'}, {'dt': 1678687200, 'main': {'temp': -1.51, 'feels_like': -6.3, 'temp_min': -1.51, 'temp_max': -1.51, 'pressure': 1011, 'sea_level': 1011, 'grnd_level': 1002, 'humidity': 98, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.23, 'deg': 100, 'gust': 10.54}, 'visibility': 127, 'pop': 0.93, 'snow': {'3h': 1.58}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-13 06:00:00'}, {'dt': 1678698000, 'main': {'temp': -1.01, 'feels_like': -5.87, 'temp_min': -1.01, 'temp_max': -1.01, 'pressure': 1009, 'sea_level': 1009, 'grnd_level': 1000, 'humidity': 98, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.5, 'deg': 97, 'gust': 11.02}, 'visibility': 117, 'pop': 1, 'snow': {'3h': 2.02}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-13 09:00:00'}, {'dt': 1678708800, 'main': {'temp': -0.53, 'feels_like': -5.08, 'temp_min': -0.53, 'temp_max': -0.53, 'pressure': 1008, 'sea_level': 1008, 'grnd_level': 999, 'humidity': 98, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.21, 'deg': 99, 'gust': 9.43}, 'visibility': 123, 'pop': 1, 'snow': {'3h': 2.11}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-13 12:00:00'}, {'dt': 1678719600, 'main': {'temp': 0.46, 'feels_like': -4.01, 'temp_min': 0.46, 'temp_max': 0.46, 'pressure': 1007, 'sea_level': 1007, 'grnd_level': 998, 'humidity': 100, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.45, 'deg': 94, 'gust': 9.09}, 'visibility': 28, 'pop': 1, 'snow': {'3h': 2.23}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-13 15:00:00'}, {'dt': 1678730400, 'main': {'temp': 0.52, 'feels_like': -3.69, 'temp_min': 0.52, 'temp_max': 0.52, 'pressure': 1005, 'sea_level': 1005, 'grnd_level': 996, 'humidity': 100, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 4.07, 'deg': 84, 'gust': 8.37}, 'visibility': 22, 'pop': 1, 'snow': {'3h': 2.29}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-13 18:00:00'}, {'dt': 1678741200, 'main': {'temp': 0.58, 'feels_like': -3.13, 'temp_min': 0.58, 'temp_max': 0.58, 'pressure': 1004, 'sea_level': 1004, 'grnd_level': 995, 'humidity': 100, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.4, 'deg': 87, 'gust': 7.04}, 'visibility': 24, 'pop': 1, 'snow': {'3h': 2.71}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-13 21:00:00'}, {'dt': 1678752000, 'main': {'temp': 0.47, 'feels_like': -1.98, 'temp_min': 0.47, 'temp_max': 0.47, 'pressure': 1005, 'sea_level': 1005, 'grnd_level': 995, 'humidity': 99, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 2.06, 'deg': 86, 'gust': 5}, 'visibility': 27, 'pop': 0.99, 'snow': {'3h': 2.2}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-14 00:00:00'}, {'dt': 1678762800, 'main': {'temp': 0.26, 'feels_like': -2.04, 'temp_min': 0.26, 'temp_max': 0.26, 'pressure': 1005, 'sea_level': 1005, 'grnd_level': 995, 'humidity': 99, 'temp_kf': 0}, 'weather': [{'id': 600, 'main': 'Snow', 'description': 'light snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 1.91, 'deg': 83, 'gust': 4.77}, 'visibility': 21, 'pop': 0.78, 'snow': {'3h': 1.33}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-14 03:00:00'}, {'dt': 1678773600, 'main': {'temp': 0.26, 'feels_like': -2.21, 'temp_min': 0.26, 'temp_max': 0.26, 'pressure': 1004, 'sea_level': 1004, 'grnd_level': 995, 'humidity': 99, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 2.05, 'deg': 32, 'gust': 5.4}, 'visibility': 22, 'pop': 0.91, 'snow': {'3h': 2.51}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-14 06:00:00'}, {'dt': 1678784400, 'main': {'temp': 0.24, 'feels_like': -3.85, 'temp_min': 0.24, 'temp_max': 0.24, 'pressure': 1005, 'sea_level': 1005, 'grnd_level': 996, 'humidity': 99, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13n'}], 'clouds': {'all': 100}, 'wind': {'speed': 3.81, 'deg': 10, 'gust': 8.32}, 'visibility': 73, 'pop': 1, 'snow': {'3h': 2.9}, 'sys': {'pod': 'n'}, 'dt_txt': '2023-03-14 09:00:00'}, {'dt': 1678795200, 'main': {'temp': -0.88, 'feels_like': -6.19, 'temp_min': -0.88, 'temp_max': -0.88, 'pressure': 1007, 'sea_level': 1007, 'grnd_level': 997, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 5.29, 'deg': 348, 'gust': 11.24}, 'visibility': 193, 'pop': 1, 'snow': {'3h': 2.69}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-14 12:00:00'}, {'dt': 1678806000, 'main': {'temp': -0.51, 'feels_like': -6.04, 'temp_min': -0.51, 'temp_max': -0.51, 'pressure': 1009, 'sea_level': 1009, 'grnd_level': 999, 'humidity': 97, 'temp_kf': 0}, 'weather': [{'id': 601, 'main': 'Snow', 'description': 'snow', 'icon': '13d'}], 'clouds': {'all': 100}, 'wind': {'speed': 5.89, 'deg': 352, 'gust': 11.26}, 'visibility': 534, 'pop': 0.95, 'snow': {'3h': 1.62}, 'sys': {'pod': 'd'}, 'dt_txt': '2023-03-14 15:00:00'}], 'city': {'id': 6094817, 'name': 'Ottawa', 'coord': {'lat': 45.4112, 'lon': -75.6981}, 'country': 'CA', 'population': 812129, 'timezone': -18000, 'sunrise': 1678361232, 'sunset': 1678402788}}
response_base = {'coord': {'lon': -75.6981, 'lat': 45.4112}, 'weather': [{'id': 803, 'main': 'Clouds', 'description': 'broken clouds', 'icon': '04d'}], 'base': 'stations', 'main': {'temp': 0.18, 'feels_like': -4.47, 'temp_min': -1.84, 'temp_max': 1.8, 'pressure': 1027, 'humidity': 60}, 'visibility': 10000, 'wind': {'speed': 4.63, 'deg': 310}, 'clouds': {'all': 75}, 'dt': 1678383465, 'sys': {'type': 2, 'id': 2005537, 'country': 'CA', 'sunrise': 1678361232, 'sunset': 1678402788}, 'timezone': -18000, 'id': 6094817, 'name': 'Ottawa', 'cod': 200}

def read_json(file):
    with open(file, 'r') as f:
        return json.load(f)

class TestWeatherWrapper(unittest.TestCase):
    @patch('weather_03.weather_wrapper.requests')
    def test_get(self, requests_mock):
        response_mock = mock.MagicMock()
        response_mock.status_code = 200
        response_mock.json.return_value = read_json('tests/test_03/data/response_base_url_ottawa.json')
        requests_mock.get.return_value = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual(1.07, weather_wrapper.get_response_city('Ottawa', BASE_URL)['main']['temp'])

    @patch('weather_03.weather_wrapper.requests')
    def test_error_from_server(self, requests_mock):
        response_mock = mock.MagicMock()
        response_mock.status_code = 404
        requests_mock.get.return_value = response_mock
        with self.assertRaises(AttributeError):
            weather_wrapper = WeatherWrapper(mock.MagicMock())
            weather_wrapper.get_response_city('aaa', BASE_URL)

    @patch('weather_03.weather_wrapper.requests')
    def test_get_temperature(self, requests_mock):
        response_mock = mock.MagicMock()
        response_mock.status_code = 200
        response_mock.json.return_value = read_json('tests/test_03/data/response_base_url_ottawa.json')
        requests_mock.get.return_value = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual(1.07, weather_wrapper.get_temperature('Ottawa'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_tomorrow_temperature(self, requests_mock):
        response_mock = mock.MagicMock()
        response_mock.status_code = 200
        response_mock.json.return_value = read_json('tests/test_03/data/response_forecast_url_ottawa.json')
        requests_mock.get.return_value = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual(-0.75, weather_wrapper.get_tomorrow_temperature('Ottawa'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_diff_string_colder(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_base_url_delhi.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_ottawa.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('Weather in Delhi is warmer than in Ottawa by 21 degrees', weather_wrapper.get_diff_string('Delhi', 'Ottawa'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_diff_string_warmer(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_base_url_ottawa.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_delhi.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('Weather in Delhi is colder than in Ottawa by 21 degrees', weather_wrapper.get_diff_string('Delhi', 'Ottawa'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_tomorrow_diff_much_warmer(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_forecast_url_astana.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_astana.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('The weather in Astana tomorrow will be much warmer than today', weather_wrapper.get_tomorrow_diff('Astana'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_tomorrow_diff_warmer(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_forecast_url_delhi.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_delhi.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('The weather in Delhi tomorrow will be warmer than today', weather_wrapper.get_tomorrow_diff('Delhi'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_tomorrow_diff_colder(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_forecast_url_ottawa.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_ottawa.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('The weather in Ottawa tomorrow will be colder than today', weather_wrapper.get_tomorrow_diff('Ottawa'))

    @patch('weather_03.weather_wrapper.requests')
    def test_get_tomorrow_diff_much_colder(self, requests_mock):
        response_mock = [mock.MagicMock(), mock.MagicMock()]
        response_mock[0].status_code = 200
        response_mock[0].json.return_value = read_json('tests/test_03/data/response_forecast_url_chile.json')
        response_mock[1].status_code = 200
        response_mock[1].json.return_value = read_json('tests/test_03/data/response_base_url_chile.json')
        requests_mock.get.side_effect = response_mock
        weather_wrapper = WeatherWrapper(mock.MagicMock())
        self.assertEqual('The weather in Chile tomorrow will be much colder than today', weather_wrapper.get_tomorrow_diff('Chile'))
